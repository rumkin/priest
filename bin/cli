#!/usr/bin/env node

var Process = require('../process.js');
var fs      = require('fs');
var _       = require('blank-js');
var chalk   = require('chalk');
var moment  = require('moment');

var argsDelim = process.argv.indexOf('--');
var argv = ~argsDelim ? process.argv.slice(argsDelim + 1) : [];

var options = {
	root : process.cwd(),
	command : '/usr/bin/env',
	respawn : true,
	args    : argv
};

var priestFilePath = process.cwd() + '/priest.json';

if ( ! argv.length && fs.existsSync(priestFilePath)) {
	_.extendDeep(options, require(priestFilePath));
} else if ( ! argv.length) {
	console.error('No app specified');
	process.exit(1);
}

var dateFormat = 'HH:mm:ss DD-MM-YYYY';
var startedAt;

var proc = Process.create(options);
proc.on('start', function(){
	startedAt = moment();
})
proc.on('error', function(e, err){
	console.error(err + '');
});

proc.on('stdout', function(e, data){
	process.stdout.write(data);
});

proc.on('stderr', function(e, data){
	process.stderr.write(data);
});

proc.on('close', function(e){
	console.log('Exit code', e.code ? chalk.bold.red(e.code) : chalk.bold.green('0'));
	console.log('Started at:', chalk.bold(startedAt.format(dateFormat)));
	console.log('Stoped at: ', chalk.bold(moment().format(dateFormat)));
});


argv = options.args.slice(0);

console.log('Run:', chalk.green.bold(argv.shift()), argv.map(chalk.bold).join(' '));
proc.start();